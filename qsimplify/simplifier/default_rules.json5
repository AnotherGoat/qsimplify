[
  // H H ->
  {
    "pattern": [
      ["h", 0, 0],
      ["h", 0, 1]
    ],
    "replacement": []
  },
  // X X ->
  {
    "pattern": [
      ["x", 0, 0],
      ["x", 0, 1]
    ],
    "replacement": []
  },
  // Y Y ->
  {
    "pattern": [
      ["y", 0, 0],
      ["y", 0, 1]
    ],
    "replacement": []
  },
  // Z Z ->
  {
    "pattern": [
      ["z", 0, 0],
      ["z", 0, 1]
    ],
    "replacement": []
  },
  // H X H -> Z
  {
    "pattern": [
      ["h", 0, 0],
      ["x", 0, 1],
      ["h", 0, 2]
    ],
    "replacement": [
      ["z", 0, 0]
    ]
  },
  // H Z H -> X
  {
    "pattern": [
      ["h", 0, 0],
      ["z", 0, 1],
      ["h", 0, 2]
    ],
    "replacement": [
      ["x", 0, 0]
    ]
  },
  /*
    CH(c) CH(c) ->
    CH(t) CH(t) ->
  */
  {
    "pattern": [
      ["ch", 0, 1, 0],
      ["ch", 0, 1, 1]
    ],
    "replacement": []
  },
  /*
    CX(c) CX(c) ->
    CX(t) CX(t) ->
  */
  {
    "pattern": [
      ["cx", 0, 1, 0],
      ["cx", 0, 1, 1]
    ],
    "replacement": []
  },
  /*
    CZ CZ ->
    CZ CZ ->
  */
  {
    "pattern": [
      ["cz", 0, 1, 0],
      ["cz", 0, 1, 1]
    ],
    "replacement": []
  },
  /*
      CX(c)   -> CZ
    H CX(t) H -> CZ
  */
  {
    "pattern": [
      ["h", 1, 0],
      ["cx", 0, 1, 1],
      ["h", 1, 2]
    ],
    "replacement": [
      ["cz", 0, 1, 0]
    ]
  },
  /*
      CZ   -> CX(c)
    H CZ H -> CX(t)
  */
  {
    "pattern": [
      ["h", 1, 0],
      ["cz", 0, 1, 1],
      ["h", 1, 2]
    ],
    "replacement": [
      ["cx", 0, 1, 0]
    ]
  },
  /*
    H CX(c) H -> CX(t)
    H CX(t) H -> CX(c)
  */
  {
    "pattern": [
      ["h", 0, 0],
      ["h", 1, 0],
      ["cx", 0, 1, 1],
      ["h", 0, 2],
      ["h", 1, 2]
    ],
    "replacement": [
      ["cx", 1, 0, 0]
    ]
  },
  /*
    CX(c) CX(t) CX(c) -> SWAP
    CX(t) CX(c) CX(t) -> SWAP
  */
  {
    "pattern": [
      ["cx", 0, 1, 0],
      ["cx", 1, 0, 1],
      ["cx", 0, 1, 2]
    ],
    "replacement": [
      ["swap", 0, 1, 0]
    ]
  },
  /*
    CX(c)       CX(c)       -> CX(c)
    CX(t) CX(c) CX(t) CX(c) ->
          CX(t)       CX(t) -> CX(t)
  */
  {
    "pattern": [
      ["cx", 0, 1, 0],
      ["cx", 1, 2, 1],
      ["cx", 0, 1, 2],
      ["cx", 1, 2, 3]
    ],
    "replacement": [
      ["cx", 0, 2, 0]
    ]
  },
  /*
          CX(c)       CX(c) -> CX(c)
    CX(c) CX(t) CX(c) CX(t) ->
    CX(t)       CX(t)       -> CX(t)
  */
  {
    "pattern": [
      ["cx", 1, 2, 0],
      ["cx", 0, 1, 1],
      ["cx", 1, 2, 2],
      ["cx", 0, 1, 3]
    ],
    "replacement": [
      ["cx", 0, 2, 0]
    ]
  },
  /*
    CX(c)       CX(c) -> CX(c)
          CX(c) CX(t) -> CX(t) CX(c)
    CX(t) CX(t)       ->       CX(t)
  */
  {
    "pattern": [
      ["cx", 0, 2, 0],
      ["cx", 1, 2, 1],
      ["cx", 0, 1, 2]
    ],
    "replacement": [
      ["cx", 0, 1, 0],
      ["cx", 1, 2, 0]
    ]
  },
  /*
          CCX(c)       -> CSWAP (c)
    CX(t) CCX(c) CX(t) -> CSWAP (t)
    CX(c) CCX(t) CX(c) -> CSWAP (t)
  */
  {
    "pattern": [
      ["cx", 2, 1, 0],
      ["ccx", 0, 1, 2, 1],
      ["cx", 2, 1, 2]
    ],
    "replacement": [
      ["cswap", 0, 1, 2, 0]
    ]
  },
  /*
      CCX(c)   -> CCZ
      CCX(c)   -> CCZ
    H CCX(t) H -> CCZ
  */
  /*
  {
    CCZ is unimplemented for now
    "pattern": [
      ["h", 2, 0],
      ["ccx", 0, 1, 2, 1],
      ["h", 2, 2]
    ],
    "replacement": [
      ["ccz", 0, 1, 2, 0]
    ]
  },
  */
  /*
    CX(c) X CX(c) -> X
    CX(t)   CX(t) -> X
  */
  {
    "pattern": [
      ["cx", 0, 1, 0],
      ["x", 0, 1],
      ["cx", 0, 1, 2]
    ],
    "replacement": [
      ["x", 0, 0],
      ["x", 1, 0]
    ]
  },
  /*
    CX(c)   CX(c) ->
    CX(t) X CX(t) -> X
  */
  {
    "pattern": [
      ["cx", 0, 1, 0],
      ["x", 1, 1],
      ["cx", 0, 1, 2]
    ],
    "replacement": [
      ["x", 1, 0]
    ]
  },
  /*
    CX(c) Z CX(c) -> Z
    CX(t)   CX(t) ->
  */
  {
    "pattern": [
      ["cx", 0, 1, 0],
      ["z", 0, 1],
      ["cx", 0, 1, 2]
    ],
    "replacement": [
      ["z", 0, 0]
    ]
  },
  /*
    CX(c)   CX(c) -> Z
    CX(t) Z CX(t) -> Z
  */
  {
    "pattern": [
      ["cx", 0, 1, 0],
      ["z", 1, 1],
      ["cx", 0, 1, 2]
    ],
    "replacement": [
      ["z", 0, 0],
      ["z", 1, 0]
    ]
  },
  /*
    CZ X CZ -> X
    CZ   CZ -> Z
  */
  {
    "pattern": [
      ["cz", 0, 1, 0],
      ["x", 0, 1],
      ["cz", 0, 1, 2]
    ],
    "replacement": [
      ["x", 0, 0],
      ["z", 1, 0]
    ]
  },
  /*
    CZ Z CZ -> Z
    CZ   CZ ->
  */
  {
    "pattern": [
      ["cz", 0, 1, 0],
      ["z", 0, 1],
      ["cz", 0, 1, 2]
    ],
    "replacement": [
      ["z", 0, 0]
    ]
  }
]
